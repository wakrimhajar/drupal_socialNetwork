<?php

/**
 * @file
 * Contains voting_reactions.install.
 */

/**
 * Implements hook_install().
 */
function votingapi_reaction_install() {
  $reactions = _votingapi_reaction_get_reactions();
  $voteTypeStorage = \Drupal::service('entity_type.manager')
    ->getStorage('vote_type');

  // Create reactions.
  $voteTypes = $voteTypeStorage->loadMultiple(
    $voteTypeStorage->getQuery()
      ->condition('id', array_keys($reactions), 'IN')
      ->execute()
  );
  foreach ($reactions as $key => $label) {
    $voteType = empty($voteTypes[$key])
      ? $voteTypeStorage->create([
        'id' => $key,
        'label' => $label,
        'value_type' => 'points',
        'description' => 'Automatically created reaction',
      ])
      : $voteTypes[$key];
    $voteType->setThirdPartySetting('votingapi_reaction', 'reaction', TRUE);
    $voteType->setThirdPartySetting('votingapi_reaction', 'icon', '');
    $voteType->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function votingapi_reaction_uninstall() {
  $reactions = _votingapi_reaction_get_reactions();
  $voteTypeStorage = \Drupal::service('entity_type.manager')
    ->getStorage('vote_type');

  // Remove reactions.
  $voteTypes = $voteTypeStorage->loadMultiple(
    $voteTypeStorage->getQuery()
      ->condition('id', array_keys($reactions), 'IN')
      ->execute()
  );
  foreach ($voteTypes as $voteType) {
    $voteType->delete();
  }
}

/**
 * Helper function to return default reactions.
 */
function _votingapi_reaction_get_reactions() {
  return [
    "reaction_angry" => "En colÃ¨re",
    "reaction_laughing" => "Je rigole",
    "reaction_like" => "J'aime",
    "reaction_love" => "J'adore",
    "reaction_sad" => "Triste",
    "reaction_surprised" => "Surpris",
  ];
}
